{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [amount, setAmount] = useState(null);\n  const [data, setData] = useState(null);\n  fetch(\"http://localhost:8001/transactions\").then(res => {\n    return res.json();\n  }).then(data => {\n    setData(data);\n  });\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          throw Error(\"Could not fetch the data for that resource...\");\n        }\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log(\"Fetch aborted\");\n        } else {\n          console.log(err.message);\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n    }, 1000);\n\n    // return abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error,\n    setData\n  };\n};\n_s(useFetch, \"HQUKAKPc92J2tjcEfe3eRF5GPD8=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","amount","setAmount","data","setData","fetch","then","res","json","setTimeout","ok","Error","setIsPending","setError","catch","err","name","console","log","message","isPending","error"],"sources":["/home/deepakgoyal/React/expense-tracker/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nconst useFetch = (url) => {\n    \n    const [amount, setAmount] = useState(null);\n\n    const [data, setData] = useState(null);\n\n    fetch(\"http://localhost:8001/transactions\")\n        .then(res => {\n            return res.json();\n        })\n        .then(data => {\n            setData(data);\n        })\n\n    useEffect(() => {\n        setTimeout(() => {\n            fetch(url)\n                .then(res => {\n                    if (!res.ok) {\n                        throw Error(\"Could not fetch the data for that resource...\")\n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    // console.log(data);\n                    setData(data)\n                    setIsPending(false)\n                    setError(null)\n                })\n                .catch(err => {\n\n                    if(err.name === 'AbortError'){\n                        console.log(\"Fetch aborted\");\n                    } else{\n                        console.log(err.message);\n                        setError(err.message);\n                        setIsPending(false)\n                    }                    \n                })\n        }, 1000)\n\n        // return abortCont.abort();\n\n    }, [url])\n\n \n\n    return { data, isPending, error, setData };\n}\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAEtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtCQ,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAACC,GAAG,IAAI;IACT,OAAOA,GAAG,CAACC,IAAI,EAAE;EACrB,CAAC,CAAC,CACDF,IAAI,CAACH,IAAI,IAAI;IACVC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,CAAC;EAENL,SAAS,CAAC,MAAM;IACZW,UAAU,CAAC,MAAM;MACbJ,KAAK,CAACL,GAAG,CAAC,CACLM,IAAI,CAACC,GAAG,IAAI;QACT,IAAI,CAACA,GAAG,CAACG,EAAE,EAAE;UACT,MAAMC,KAAK,CAAC,+CAA+C,CAAC;QAChE;QACA,OAAOJ,GAAG,CAACC,IAAI,EAAE;MACrB,CAAC,CAAC,CACDF,IAAI,CAACH,IAAI,IAAI;QACV;QACAC,OAAO,CAACD,IAAI,CAAC;QACbS,YAAY,CAAC,KAAK,CAAC;QACnBC,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QAEV,IAAGA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAC;UACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAChC,CAAC,MAAK;UACFD,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,OAAO,CAAC;UACxBN,QAAQ,CAACE,GAAG,CAACI,OAAO,CAAC;UACrBP,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC,CAAC;IACV,CAAC,EAAE,IAAI,CAAC;;IAER;EAEJ,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EAIT,OAAO;IAAEG,IAAI;IAAEiB,SAAS;IAAEC,KAAK;IAAEjB;EAAQ,CAAC;AAC9C,CAAC;AAAA,GAhDKL,QAAQ;AAkDd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}